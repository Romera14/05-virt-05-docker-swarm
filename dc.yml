- name: docker-compouse
  become: true
  hosts: nodes
  tasks:
  - name: install dependencies
    apt:
      name: "{{item}}"
      state: present
      update_cache: yes
    loop:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
  - name: add GPG key

    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: add docker repository to apt
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu bionic stable
      state: present

  - name: install docker
    apt:
      name: "{{item}}"
      state: latest
      update_cache: yes
    loop:
      - docker-ce
      - docker-ce-cli
      - containerd.io
  - name: check docker is active
    service:
      name: docker
      state: started
      enabled: yes
  
  - name: Ensure group "docker" exists
    ansible.builtin.group:
      name: docker
      state: present
  - name: adding test to docker group
    user:
      name: test
      groups: docker
      append: yes
  - name: Install docker-compose
    get_url:
      url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
      dest: /usr/local/bin/docker-compose
      mode: 'u+x,g+x'
  - name: Change file ownership, group and permissions
    ansible.builtin.file:
      path: /usr/local/bin/docker-compose
      owner: test
      group: test

- name: configure
  hosts: nodes
  become: true
  roles:
    - configure-hosts-file

- name: Initialize Docker Swarm Cluster
  hosts: active
  become: true
  roles:
    - docker-swarm-init

- name: Add Managers Swarm Cluster
  hosts: standby
  become: true
  roles:
    - docker-swarm-add-manager

- name: Add Workers to the Swarm Cluster
  hosts: workers
  become: true
  roles:
    - docker-swarm-add-worker

- name: swarm-deploy-sync
  hosts: nodes
  become: true

  tasks:
    - name: Synchronization
      copy:
        src: monitoring/
        dest: "/opt/monitoring/"
        owner: root
        group: root
        mode: 0644
      become: true

- name: swarm-deploy-stack
  hosts: nodes
  become: true
  tasks:
    - name: Check Current Leader
      shell: docker node ls | grep {{ ansible_hostname }}
      register: docker_info
      changed_when: false

    - name: Run deploy, if node is leader
      shell: docker stack deploy --compose-file /opt/monitoring/docker-compose.yml swarm_monitoring
      when:
        - "'Leader' in docker_info.stdout"
        - "'Active' in docker_info.stdout"